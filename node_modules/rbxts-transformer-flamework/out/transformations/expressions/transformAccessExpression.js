"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transformAccessExpression = void 0;
var diagnostics_1 = require("../../classes/diagnostics");
var factory_1 = require("../../util/factory");
function transformAccessExpression(state, node) {
    var _a;
    var name = getAccessName(node);
    return (_a = transformNetworkEvent(state, node, name)) !== null && _a !== void 0 ? _a : state.transform(node);
}
exports.transformAccessExpression = transformAccessExpression;
function transformNetworkEvent(state, node, name) {
    var networking = state.symbolProvider.networkingImpl;
    if (!networking)
        return;
    var type = state.typeChecker.getTypeAtLocation(node);
    if (type.symbol !== networking.get("ServerMethod") && type.symbol !== networking.get("ClientMethod"))
        return;
    if (!name)
        diagnostics_1.Diagnostics.error(node, "Expected string");
    return factory_1.f.elementAccessExpression(node.expression, state.obfuscateText(name, "remotes"));
}
function getAccessName(node) {
    if (factory_1.f.is.propertyAccessExpression(node)) {
        return node.name.text;
    }
    else {
        if (factory_1.f.is.string(node.argumentExpression) || factory_1.f.is.identifier(node.argumentExpression)) {
            return node.argumentExpression.text;
        }
    }
}
