import ts from "byots";
import { ProjectType } from "./constants";
export interface ProjectOptions {
    includePath: string;
    rojo: string | undefined;
    type: ProjectType | undefined;
}
export interface ProjectFlags {
    logTruthyChanges: boolean;
    noInclude: boolean;
    project: string;
    usePolling: boolean;
    verbose: boolean;
    watch: boolean;
    writeOnlyChanged: boolean;
}
export interface ProjectData {
    includePath: string;
    isPackage: boolean;
    logTruthyChanges: boolean;
    nodeModulesPath: string;
    noInclude: boolean;
    pkgVersion: string;
    projectOptions: ProjectOptions;
    projectPath: string;
    rojoConfigPath: string | undefined;
    tsConfigPath: string;
    writeOnlyChanged: boolean;
    watch: boolean;
    transformerWatcher?: TransformerWatcher;
}
export interface TransformerWatcher {
    service: ts.LanguageService;
    updateFile: (fileName: string, text: string) => void;
}
export interface TransformerPluginConfig {
    transform?: string;
    import?: string;
    type?: "program" | "config" | "checker" | "raw" | "compilerOptions";
    after?: boolean;
    afterDeclarations?: boolean;
    [options: string]: unknown;
}
