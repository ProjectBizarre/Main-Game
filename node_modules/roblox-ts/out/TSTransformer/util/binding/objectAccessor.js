"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.objectAccessor = void 0;
const byots_1 = __importDefault(require("byots"));
const LuauAST_1 = __importDefault(require("../../../LuauAST"));
const assert_1 = require("../../../Shared/util/assert");
const transformExpression_1 = require("../../nodes/expressions/transformExpression");
const addOneIfArrayType_1 = require("../addOneIfArrayType");
const objectAccessor = (state, parentId, accessType, name) => {
    if (byots_1.default.isIdentifier(name)) {
        return LuauAST_1.default.property(parentId, name.text);
    }
    else if (byots_1.default.isComputedPropertyName(name)) {
        return LuauAST_1.default.create(LuauAST_1.default.SyntaxKind.ComputedIndexExpression, {
            expression: parentId,
            index: addOneIfArrayType_1.addOneIfArrayType(state, accessType, transformExpression_1.transformExpression(state, name.expression)),
        });
    }
    else if (byots_1.default.isNumericLiteral(name) || byots_1.default.isStringLiteral(name)) {
        return LuauAST_1.default.create(LuauAST_1.default.SyntaxKind.ComputedIndexExpression, {
            expression: parentId,
            index: transformExpression_1.transformExpression(state, name),
        });
    }
    assert_1.assert(false);
};
exports.objectAccessor = objectAccessor;
//# sourceMappingURL=objectAccessor.js.map