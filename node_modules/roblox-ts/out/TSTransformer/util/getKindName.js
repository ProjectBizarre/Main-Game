"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getKindName = void 0;
const byots_1 = __importDefault(require("byots"));
function getKindName(kind) {
    if (kind === byots_1.default.SyntaxKind.FirstAssignment)
        return "EqualsToken";
    if (kind === byots_1.default.SyntaxKind.FirstCompoundAssignment)
        return "PlusEqualsToken";
    if (kind === byots_1.default.SyntaxKind.LastReservedWord)
        return "WithKeyword";
    if (kind === byots_1.default.SyntaxKind.FirstKeyword)
        return "BreakKeyword";
    if (kind === byots_1.default.SyntaxKind.FirstFutureReservedWord)
        return "ImplementsKeyword";
    if (kind === byots_1.default.SyntaxKind.LastFutureReservedWord)
        return "YieldKeyword";
    if (kind === byots_1.default.SyntaxKind.FirstTypeNode)
        return "TypePredicate";
    if (kind === byots_1.default.SyntaxKind.LastTypeNode)
        return "ImportType";
    if (kind === byots_1.default.SyntaxKind.FirstPunctuation)
        return "OpenBraceToken";
    if (kind === byots_1.default.SyntaxKind.FirstToken)
        return "Unknown";
    if (kind === byots_1.default.SyntaxKind.FirstTriviaToken)
        return "SingleLineCommentTrivia";
    if (kind === byots_1.default.SyntaxKind.LastTriviaToken)
        return "ConflictMarkerTrivia";
    if (kind === byots_1.default.SyntaxKind.FirstLiteralToken)
        return "NumericLiteral";
    if (kind === byots_1.default.SyntaxKind.FirstTemplateToken)
        return "NoSubstitutionTemplateLiteral";
    if (kind === byots_1.default.SyntaxKind.LastTemplateToken)
        return "TemplateTail";
    if (kind === byots_1.default.SyntaxKind.FirstBinaryOperator)
        return "LessThanToken";
    if (kind === byots_1.default.SyntaxKind.LastBinaryOperator)
        return "CaretEqualsToken";
    if (kind === byots_1.default.SyntaxKind.FirstStatement)
        return "VariableStatement";
    if (kind === byots_1.default.SyntaxKind.LastStatement)
        return "DebuggerStatement";
    if (kind === byots_1.default.SyntaxKind.FirstNode)
        return "QualifiedName";
    if (kind === byots_1.default.SyntaxKind.FirstJSDocNode)
        return "JSDocTypeExpression";
    if (kind === byots_1.default.SyntaxKind.FirstJSDocTagNode)
        return "JSDocTag";
    if (kind === byots_1.default.SyntaxKind.LastJSDocTagNode)
        return "JSDocPropertyTag";
    if (kind === byots_1.default.SyntaxKind.FirstContextualKeyword)
        return "AbstractKeyword";
    if (kind === byots_1.default.SyntaxKind.LastContextualKeyword)
        return "OfKeyword";
    return byots_1.default.SyntaxKind[kind];
}
exports.getKindName = getKindName;
//# sourceMappingURL=getKindName.js.map