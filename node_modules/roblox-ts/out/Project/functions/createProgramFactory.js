"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createProgramFactory = void 0;
const byots_1 = __importDefault(require("byots"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const createReadBuildProgramHost_1 = require("../util/createReadBuildProgramHost");
const constants_1 = require("../../Shared/constants");
const assert_1 = require("../../Shared/util/assert");
function createCompilerHost(data, compilerOptions) {
    const host = byots_1.default.createIncrementalCompilerHost(compilerOptions);
    let rojoHash = "";
    if (data.rojoConfigPath && fs_extra_1.default.existsSync(data.rojoConfigPath)) {
        assert_1.assert(host.createHash);
        rojoHash = "-" + host.createHash(fs_extra_1.default.readFileSync(data.rojoConfigPath).toString());
    }
    byots_1.default.version = constants_1.COMPILER_VERSION + data.pkgVersion + rojoHash;
    return host;
}
function createProgramFactory(data, options) {
    return (rootNames, compilerOptions = options, host = createCompilerHost(data, options), oldProgram = byots_1.default.readBuilderProgram(options, createReadBuildProgramHost_1.createReadBuildProgramHost())) => byots_1.default.createEmitAndSemanticDiagnosticsBuilderProgram(rootNames, compilerOptions, host, oldProgram);
}
exports.createProgramFactory = createProgramFactory;
//# sourceMappingURL=createProgramFactory.js.map